{"version":3,"sources":["reportWebVitals.js","services/todoManager.js","services/taskManager.js","core/config.js","core/context.js","core/actions.js","core/seed.js","components/todoPane/todoInput.js","components/todoPane/todo.js","components/todoPane/todoList.js","components/todoPane/toggleAlltodos.js","components/todoPane/clearCompleted.js","components/todoPane/filterButton.js","components/todoPane/filterBar.js","components/todoPane/addButton.js","components/todoPane/editButton.js","components/todoPane/actionButton.js","components/todoPane/index.js","components/taskPane/task.js","components/taskPane/taskList.js","components/taskPane/index.js","services/taskRetriver.js","services/ticker.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","filters","All","Active","todo","completed","Completed","TodoManager","toggleTodo","todos","data","map","id","addTodo","input","concat","text","rndString","context","config","idLength","removeTodo","filter","current","toggleAllTodos","ischecked","getActiveCount","length","getTodosCount","clearCompleted","getInactiveCount","setFilter","editTodo","editing","TaskManager","init","actions","addTask","removeTask","tasks","task","tickerDelay","milliseconds","minimumTaskCount","setInput","dummy","state","isChecked","setEditing","addTaskTodo","seed","count","countStart","actionKeys","Enter","Escape","todoInput","value","onChange","evt","target","onKeyUp","code","Todo","className","type","checked","onClick","todoList","toggleAll","TargetManager","todoManager","filterButton","isTodos","filterBar","AddButton","disabled","editButton","actionButton","addButton","TodoPane","removeButton","Task","TaskList","TaskPane","getRndTask","txt","faker","hacker","verb","noun","charAt","toUpperCase","substr","TaskRetriver","getTask","rndBetween","i","push","Ticker","start","setInterval","App","useEffect","Entry","useState","setState","updateContext","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1f6d65a.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n\tif(onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","/* eslint-disable function-paren-newline */\nimport { rndString } from '@laufire/utils/random';\nimport context from '../core/context';\n\nconst addTodo = (todos, input) => todos.concat({\n\ttext: input,\n\tid: rndString(context.config.idLength),\n\tcompleted: false,\n});\n\nconst toggleTodo = (todos, data) => todos.map((todo) =>\n\t(todo.id !== data.id\n\t\t? todo\n\t\t: {\n\t\t\t...todo,\n\t\t\tcompleted: !data.completed,\n\t\t}));\n\nconst removeTodo = (todos, todo) => todos.filter((current) =>\n\tcurrent.id !== todo.id);\n\nconst toggleAllTodos = (todos, ischecked) =>\n\ttodos.map((todo) => ({ ...todo, completed: ischecked }));\n\nconst getActiveCount = (data) =>\n\tdata.filter((todo) => !todo.completed).length;\n\nconst getTodosCount = (data) => data.length;\n\nconst clearCompleted = (todos) => todos.filter((todo) => !todo.completed);\n\nconst getInactiveCount = (todos) =>\n\ttodos.filter((todo) => todo.completed).length;\n\nconst filters = {\n\tAll: () => true,\n\tActive: (todo) => !todo.completed,\n\tCompleted: (todo) => todo.completed,\n};\n\nconst setFilter = (todos, filter) => todos.filter(filters[filter]);\n\nconst editTodo = (todos, editing, text) => todos.map((todo) =>\n\t(todo.id !== editing.id\n\t\t? todo\n\t\t: {\n\t\t\t...todo,\n\t\t\ttext,\n\t\t}));\n\nconst TodoManager = {\n\ttoggleTodo,\n\taddTodo,\n\tremoveTodo,\n\ttoggleAllTodos,\n\tgetActiveCount,\n\tgetTodosCount,\n\tclearCompleted,\n\tgetInactiveCount,\n\tsetFilter,\n\teditTodo,\n};\n\nexport default TodoManager;\n","import context from '../core/context.js';\nimport { rndString } from '@laufire/utils/random';\n\nconst getTask = (text) => ({\n\tid: rndString(context.config.idLength),\n\ttext: text,\n});\n\nconst init = () => {\n\tcontext.actions.addTask('Task1');\n\tcontext.actions.addTask('Task2');\n\tcontext.actions.addTask('Task3');\n};\n\nconst removeTask = (tasks, data) => tasks.filter((task) => task.id !== data.id);\n\nconst addTask = (tasks, task) => tasks.concat(getTask(task));\n\nconst taskManager = () => ({\n\tinit,\n\tremoveTask,\n\taddTask,\n});\n\nconst TaskManager = taskManager();\n\nexport default TaskManager;\n","const milliseconds = 1000;\nconst seconds = 5;\n\nconst config = {\n\tidLength: 16,\n\ttickerDelay: milliseconds * seconds,\n\tminimumTaskCount: 3,\n};\n\nexport default config;\n","import actions from './actions';\nimport config from './config';\nimport seed from './seed';\n\nconst context = {\n\tactions,\n\tconfig,\n\tseed,\n};\n\nexport default context;\n","import TodoManager from '../services/todoManager';\nimport TaskManager from '../services/taskManager';\n\nconst addTodo = ({ state }) => ({\n\tinput: '',\n\ttodos: TodoManager.addTodo(state.todos, state.input),\n});\n\nconst setInput = (dummy, input) => ({\n\tinput,\n});\n\nconst toggleTodo = ({ state }, todo) => ({\n\ttodos: TodoManager.toggleTodo(state.todos, todo),\n});\n\nconst removeTodo = ({ state }, todo) => ({\n\ttodos: TodoManager.removeTodo(state.todos, todo),\n});\n\nconst toggleAllTodos = ({ state }, isChecked) => ({\n\ttodos: TodoManager.toggleAllTodos(state.todos, isChecked),\n});\n\nconst clearCompleted = ({ state }) => ({\n\ttodos: TodoManager.clearCompleted(state.todos),\n});\n\nconst setFilter = (dummy, filter) => ({\n\tfilter,\n});\n\nconst editTodo = ({ state }) => ({\n\tinput: '',\n\tediting: null,\n\t// eslint-disable-next-line function-paren-newline\n\ttodos: TodoManager.editTodo(state.todos, state.editing, state.input),\n});\n\nconst setEditing = (dummy, todo) => ({\n\tediting: todo,\n\tinput: todo.text,\n});\n\nconst addTask = ({ state }, task) => ({\n\ttasks: TaskManager.addTask(state.tasks, task),\n});\n\nconst removeTask = ({ state }, task) => ({\n\ttasks: TaskManager.removeTask(state.tasks, task),\n});\n\nconst addTaskTodo = ({ state }, task) => ({\n\ttodos: TodoManager.addTodo(state.todos, task.text),\n});\n\nconst actions = {\n\tsetInput,\n\taddTodo,\n\ttoggleTodo,\n\tremoveTodo,\n\ttoggleAllTodos,\n\tclearCompleted,\n\tsetFilter,\n\teditTodo,\n\tsetEditing,\n\taddTask,\n\tremoveTask,\n\taddTaskTodo,\n};\n\nexport default actions;\n","import config from './config';\n\nconst seed = {\n\tinput: '',\n\ttodos: [],\n\tcount: config.countStart,\n\tfilter: 'All',\n\tediting: null,\n\ttasks: [],\n};\n\nexport default seed;\n","import { React } from 'react';\nimport context from '../../core/context';\n\nconst getEnterkeyAction = () => (context.state.editing\n\t? 'editTodo'\n\t: 'addTodo');\n\nconst actionKeys = {\n\tEnter: () => context.actions[getEnterkeyAction()](),\n\tEscape: () => context.actions.setInput(''),\n};\n\nconst todoInput = () =>\n\t<input\n\t\tvalue={ context.state.input }\n\t\tonChange={ (evt) => context.actions.setInput(evt.target.value) }\n\t\tonKeyUp={ (evt) => actionKeys[evt.code] && actionKeys[evt.code]() }\n\t/>;\n\nexport default todoInput;\n","/* eslint-disable max-lines-per-function */\nimport { React } from 'react';\nimport context from '../../core/context';\n\nconst Todo = (todo) => {\n\tconst { text, id, completed } = todo;\n\n\tconst className = `todo ${ completed ? 'todo-completed' : 'todo-active' }` ;\n\n\treturn <div key={ id } className={ className }>\n\t\t<span>\n\t\t\t<input\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tchecked={ completed }\n\t\t\t\tonChange={ () => context.actions.toggleTodo(todo) }\n\t\t\t/>\n\t\t</span>\n\t\t<span onClick={ () => context.actions.setEditing(todo) }>\n\t\t\t{ text }\n\t\t</span>\n\t\t<span>\n\t\t\t<button\n\t\t\t\tclassName=\"closeButton\"\n\t\t\t\tonClick={ () => context.actions.removeTodo(todo) }\n\t\t\t>\n\t\t\t\tX</button>\n\t\t</span>\n\t</div>;\n};\n\nexport default Todo;\n","import context from '../../core/context';\nimport TodoManager from '../../services/todoManager';\nimport todo from './todo.js';\n\nconst todoList = () => {\n\tconst { filter, todos } = context.state;\n\tconst filteredTodo = TodoManager.setFilter(todos, filter);\n\n\treturn filteredTodo.map(todo);\n};\n\nexport default todoList;\n","/* eslint-disable react/jsx-indent-props */\n/* eslint-disable no-mixed-spaces-and-tabs */\nimport { React } from 'react';\nimport context from '../../core/context';\nimport TargetManager from '../../services/todoManager';\n\nconst toggleAll = () => {\n\tconst isChecked = TargetManager.getActiveCount(context.state.todos) === 0;\n\tconst isTodos = TargetManager.getTodosCount(context.state.todos) === 0;\n\n\treturn isTodos\n\t\t? null\n\t\t: <input\n\t\t\ttype=\"checkbox\"\n\t\t\tchecked={ isChecked }\n\t\t\tonChange={ () => context.actions.toggleAllTodos(!isChecked) }\n\t\t  />;\n};\n\nexport default toggleAll;\n","import { React } from 'react';\nimport context from '../../core/context';\nimport todoManager from '../../services/todoManager.js';\n\nconst clearCompleted = () => {\n\tconst isCompleted\n\t\t= todoManager.getInactiveCount(context.state.todos) === 0;\n\n\treturn isCompleted\n\t\t? null\n\t\t: <button onClick={ () => context.actions.clearCompleted() }>\n\t\t\tclear completed</button>;\n};\n\nexport default clearCompleted;\n","import { React } from 'react';\nimport context from '../../core/context';\nimport TodoManager from '../../services/todoManager';\n\nconst filterButton = (filter) => {\n\tconst isTodos = TodoManager.getTodosCount(context.state.todos) === 0;\n\tconst className = `${ filter !== context.state.filter ? 'filterButton-default' : 'filterButton-selected' }`;\n\n\treturn isTodos\n\t\t? null\n\t\t: <span>\n\t\t\t<button\n\t\t\t\tclassName={ className }\n\t\t\t\tonClick={ () => context.actions.setFilter(filter) }\n\t\t\t>\n\t\t\t\t{filter}</button>\n\t\t</span>;\n};\n\nexport default filterButton;\n","import { React } from 'react';\nimport filterButton from './filterButton.js';\n\nconst filterBar = () => {\n\tconst filters = ['All', 'Active', 'Completed'];\n\n\treturn <div className=\"filterBar\">{filters.map(filterButton)}</div>;\n};\n\nexport default filterBar;\n","import { React } from 'react';\nimport context from '../../core/context';\n\nconst AddButton = () =>\n\t<button\n\t\tdisabled={ context.state.input === '' }\n\t\tonClick={ () => context.actions.addTodo() }\n\t>\n\t\tAdd</button>;\n\nexport default AddButton;\n","import { React } from 'react';\nimport context from '../../core/context';\n\nconst editButton = () =>\n\t<button\n\t\tdisabled={ context.state.input === '' }\n\t\tonClick={ () => context.actions.editTodo() }\n\t>\n\t\tedit</button>;\n\nexport default editButton;\n","import context from '../../core/context';\nimport addButton from './addButton.js';\nimport editButton from './editButton.js';\n\nconst actionButton = () => (context.state.editing\n\t? editButton()\n\t: addButton());\n\nexport default actionButton;\n","import todoInput from './todoInput.js';\nimport todoList from './todoList.js';\nimport toggleAll from './toggleAlltodos.js';\nimport clearCompleted from './clearCompleted.js';\nimport filterBar from './filterBar.js';\nimport actionButton from './actionButton.js';\n\nconst TodoPane = () => {\n\n\treturn (\n\t<div className='pane todoPane'>\n\t\t<div>\n\t\t\t{toggleAll()}\n\t\t\t{todoInput()}\n\t\t\t<span>{actionButton()}</span>\n\t\t</div>\n\t\t<div>Todos: {todoList() }</div>\n\t\t<div>{ clearCompleted() }</div>\n\t\t<div>{ filterBar() }</div>\n\t</div>\n\t);\n};\n\nexport default TodoPane;\n","import context from '../../core/context';\nimport { React } from 'react';\n\nconst removeButton = (task) =>\n\t<button\n\t\tclassName=\"closeButton\"\n\t\tonClick={ () => context.actions.removeTask(task) }\n\t>X</button>;\n\nconst addButton = (task) =>\n\t<button onClick={ () => {\n\t\tcontext.actions.addTaskTodo(task) ;\n\t\tcontext.actions.removeTask(task);\n\t} }\n\t>+</button>;\n\nconst Task = (task) => {\n\tconst { id, text } = task;\n\n\treturn <div key={ id } className=\"task\">\n\t\t<span>{addButton(task)}</span>\n\t\t<span>{removeButton(task)}</span>\n\t\t<span>{text}</span>\n\t</div>;\n};\n\nexport default Task;\n","import context from '../../core/context';\nimport { React } from 'react';\nimport task from './task.js';\n\nconst TaskList = () => {\n\tconst { tasks } = context.state;\n\n\treturn <div>\n\t\t{ tasks.map(task) }\n\t</div>;\n};\n\nexport default TaskList;\n","import { React } from 'react';\nimport TaskList from './taskList';\n\nconst TaskPane = () =>\n<div className='pane taskPane'>\n\t<h3>Task</h3>\n\t{TaskList()}\n\t</div>;\n\nexport default TaskPane;\n","import faker from 'faker';\nimport { rndBetween } from '@laufire/utils/random';\nimport config from '../core/config';\n\nconst toProperFormart = (txt) => txt.charAt(0).toUpperCase() + txt.substr(1);\n\nconst getRndTask = () =>\n\ttoProperFormart(`${ faker.hacker.verb() } ${ faker.hacker.noun() }.`);\n\nconst getTask = () => {\n\tconst count = rndBetween(0, config.minimumTaskCount);\n\tconst tasks = [];\n\n\tfor(let i = 0; i < count; i++)\n\t\ttasks.push(getRndTask());\n\n\treturn tasks;\n};\n\nconst TaskRetriver = {\n\tgetTask,\n};\n\nexport default TaskRetriver;\n","import context from '../core/context';\nimport config from '../core/config';\nimport TaskRetriver from './taskRetriver';\n\nconst start = () => {\n\tconst { tickerDelay } = config;\n\tconst { addTask } = context.actions;\n\n\treturn setInterval(() => TaskRetriver.getTask().map(addTask), tickerDelay);\n};\n\nconst Ticker = {\n\tstart,\n};\n\nexport default Ticker;\n","import { React, useEffect } from 'react';\nimport './App.css';\nimport TodoPane from './components/todoPane';\nimport TaskManager from './services/taskManager.js';\nimport TaskPane from './components/taskPane';\nimport Ticker from './services/ticker.js';\n\nconst App = () => {\n\tuseEffect(TaskManager.init, []);\n\tuseEffect(Ticker.start, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{ TodoPane() }\n\t\t\t{ TaskPane() }\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport updateContext from '@laufire/resist';\nimport './index.css';\nimport App from './App';\nimport context from './core/context';\n\nconst Entry = () => {\n\tconst [state, setState] = useState(context.seed);\n\n\tupdateContext(context, { state, setState });\n\n\treturn App(context);\n};\n\nReactDOM.render(<React.StrictMode>\n\t<Entry/>\n</React.StrictMode>,\ndocument.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}